---
name: Release

on:
    schedule:
        - cron: 0 4 * * *
    workflow_dispatch:

jobs:
    modify:
        name: Modifying source code
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: true
            - name: Update submodule
              continue-on-error: true
              run: |
                  git submodule update --remote upstream
                  git config user.name "Sophie Keller"
                  git config user.email 90475612+skeller00@users.noreply.github.com
                  git commit -am "Committing changes from upstream"
                  git push
            - name: Running modifications
              run: |
                  sed -i \
                    -e "s/version=version/version=\"$(date +%Y.%m.%d)\"/g" upstream/setup.py \
                  upstream/setup.py
                  sed -i \
                    -e "s/name = snowflake-connector-python/name= snowflake-connector-python-nightly/" \
                  upstream/setup.cfg
            - uses: actions/upload-artifact@v2
              with:
                  name: modified_source
                  path: upstream
    build:
        name: Build py${{ matrix.python }} ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        needs: modify
        defaults:
            run:
                shell: bash
        strategy:
            matrix:
                os: [windows-latest, macos-latest, ubuntu-latest]
                python: ['37', '38', '39', '310']
        steps:
            - uses: actions/download-artifact@v3
              with:
                  name: modified_source
            - if: matrix.os == 'ubuntu-latest'
              uses: docker/setup-qemu-action@v2
              with:
                  platforms: all
            - uses: pypa/cibuildwheel@v2.11.4
              env:
                  CIBW_SKIP: '*-musllinux*'
                  CIBW_BUILD: cp${{ matrix.python }}-*
                  CIBW_ARCHS_MACOS: x86_64 arm64 universal2
                  CIBW_ARCHS_WINDOWS: AMD64
                  CIBW_ARCHS_LINUX: x86_64 aarch64
              with:
                  output-dir: dist
            - name: Show built wheels
              run: ls -lh dist
            - uses: actions/upload-artifact@v3
              with:
                  path: dist
                  name: wheels
    release:
        name: Release built wheels
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/download-artifact@v3
              with:
                  name: wheels
            - name: Show all built wheels
              run: ls -lh .
            - name: Publish a Python distribution to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1.6.4
              with:
                  password: ${{ secrets.PYPI_API_TOKEN }}
                  packages_dir: .
